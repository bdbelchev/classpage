@{
    ViewData["Title"] = "Edit grade";
}

@model GradeDTO

<form asp-action="Edit" asp-controller="Grades" asp-route-id="@Model.Id" method="post">
    <div class="form-group">
        <label>Teacher</label>
        @if (!User.HasClaim("Role", "Admin"))
        {
            <select class="form-control" disabled name="teacherId">
                @{
                    TeacherDTO teacher = (ViewBag.TeacherList as ICollection<TeacherDTO>).Single(t => t.Id == Model.TeacherId);
                    <option value="@Model.TeacherId">@teacher.FirstName @teacher.LastName</option>
                }
            </select>

        }
        else
        {
            <select class="form-control" name="teacherId">
                <option disabled="disabled">Current teacher</option>
                @{
                    TeacherDTO currentTeacher = (ViewBag.TeacherList as ICollection<TeacherDTO>).Single(t => t.Id == Model.TeacherId);
                    <option selected="selected" value="@Model.TeacherId">@currentTeacher.FirstName @currentTeacher.LastName</option>
                }
                <option disabled="disabled">Select teacher</option>
                @foreach (TeacherDTO teacher in ViewBag.TeacherList)
                {
                    <option value="@teacher.Id">@teacher.FirstName @teacher.LastName</option>
                }
            </select>
        }
    </div>
    <div class="form-group">
        <label>Subject</label>
        <select class="form-control" name="subjectId">
            <option disabled="disabled">Current subject</option>
            <option selected="selected" value="@Model.SubjectId">@((ViewBag.SubjectList as ICollection<Subject>).Single(s=>s.Id==Model.SubjectId).SubjectName)</option>
            <option disabled="disabled">Select subject</option>
            @if (!User.HasClaim("Role", "Admin"))
            {
                foreach (int id in (ViewBag.TeacherList as ICollection<TeacherDTO>).Single(t => t.Id == Model.TeacherId).SubjectIds)
                {
                    <option value="@id">@((ViewBag.SubjectList as ICollection<Subject>).Single(s => s.Id == id).SubjectName)</option>
                }
            }
            else
            {
                foreach (Subject s in ViewBag.SubjectList)
                {
                    <option value="@s.Id">@s.SubjectName</option>
                }
            }
        </select>
    </div>
    <div class="form-group">
        <label>Class</label>
        <select class="form-control" id="classId">
            <option disabled="disabled">Current class</option>
            @{
                StudentDTO currentSelectedStudent = (ViewBag.StudentList as ICollection<StudentDTO>).Single(t => t.Id == Model.StudentId);
                Class currentClass = (ViewBag.ClassList as ICollection<Class>).Single(t => t.Id == currentSelectedStudent.ClassId);
                <option selected="selected" value="@currentSelectedStudent.ClassId">@currentClass.ClassName</option>
            }
            <option disabled="disabled">Select class</option>
            @if (!User.HasClaim("Role", "Admin"))
            {
                foreach (int id in (ViewBag.TeacherList as ICollection<TeacherDTO>).Single(t => t.Id == Model.TeacherId).ClassIds)
                {
                    <option value="@id">@((ViewBag.ClassList as ICollection<Class>).Single(s => s.Id == id).ClassName)</option>
                }
            }
            else
            {
                foreach (Class c in ViewBag.ClassList)
                {
                    <option value="@c.Id">@c.ClassName</option>
                }
            }
        </select>
    </div>
    <div class="form-group">
        <label>Student</label>
        <select id="studentId" name="studentId" class="form-control" required>
            <option disabled="disabled">Current student</option>
            @{
                StudentDTO currentStudent = (ViewBag.StudentList as ICollection<StudentDTO>).Single(t => t.Id == Model.StudentId);
                <option selected="selected" value="@Model.StudentId">@currentStudent.FirstName @currentStudent.LastName</option>
            }
            <option disabled="disabled">Select new class to populate student list</option>
        </select>
    </div>
    <div class="form-group">
        <label>Grade</label>
        <select name="value" class="form-control" required>
            <option disabled="disabled">Current grade</option>
            <option selected="selected" value="@Model.Value">@Model.Value</option>
            <option disabled="disabled">Select grade</option>
            @for (int i = 2; i <= 6; i++)
            {
                <option value="@i">@i</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label>Date</label>
        <input type="date" value="@Model.DateAdded.Date.ToString("yyyy-MM-dd")" name="dateAdded" class="form-control" required />
    </div>
    <div class="form-group">
        <label>Description</label>
        <input name="description" value="@Model.Description" class="form-control" type="text" />
    </div>
    <input type="submit" value="Go" class="btn btn-primary" />
</form>
<script type="text/javascript">
    $(document).ready(function() {
        $("#classId").on("change",
            function() {
                $("#studentId").empty();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetStudentsDropdown")',

                    dataType: 'json',

                    data: { classId: $("#classId").val() },

                    success: function (data) {
                        $.each(data.students,
                            function(i, st) {
                                $("#studentId").append('<option value="'+ st.value + '">' + st.text + '</option>');
                            });
                    }
                });
                return false;
            });
    });
</script>