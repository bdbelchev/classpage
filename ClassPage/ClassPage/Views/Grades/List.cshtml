@model List<GradeDTO>

@if (Model.Count < 1)
{
    ViewData["Title"] = "No grades";
    <h1>Student has no grades!</h1>
}
else
{
    StudentDTO currentStudent = (ViewBag.StudentList as ICollection<StudentDTO>).Single(t => t.Id == Model.First().StudentId);
    ViewData["Title"] = $"{currentStudent.FirstName}'s grades";
    <h1>Grades for: @currentStudent.FirstName</h1>
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">Subject</th>
                <th scope="col">Grade</th>
                <th scope="col">Date</th>
                <th scope="col">Teacher</th>
                <th scope="col">Description</th>
                @if (!User.HasClaim("Role", "Student"))
                {
                    <th scope="col"></th>
                }
            </tr>
        </thead>
        @foreach (GradeDTO g in Model)
        {
            <tr>
                <td>@((ViewBag.SubjectList as ICollection<Subject>).Single(s=>s.Id==g.SubjectId).SubjectName)</td>
                <td>@g.Value</td>
                <td>@g.DateAdded.ToShortDateString()</td>
                @{
                    TeacherDTO currentTeacher = (ViewBag.TeacherList as ICollection<TeacherDTO>).Single(t => t.Id == g.TeacherId);
                    <td>@currentTeacher.FirstName @currentTeacher.LastName</td>
                }
                <td>@g.Description</td>
                @if (User.HasClaim("Role", "Admin") || !User.HasClaim("Role", "Student") && g.TeacherId == int.Parse(User.Claims.Single(c => c.Type == "EntityID").Value))
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Grades", new { gradeId = g.Id }, new { @class = "btn btn-warning" })
                        @Html.ActionLink("Delete", "Delete", "Grades", new { gradeId = g.Id }, new { @class = "btn btn-danger" })
                    </td>
                }
            </tr>
        }
    </table>
}